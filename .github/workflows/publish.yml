name: Publish to npm

on:
  push:
    branches: [main]
    paths:
      - 'packages/*/package.json'
      - '.github/workflows/publish.yml'

  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no actual publish)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    # Require CI to pass first
    needs: []
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js (for npm publish)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun run typecheck

      - name: Lint
        run: bun run lint

      - name: Build packages
        run: bun run build

      - name: Run tests
        run: bun run verify

      - name: Check if packages exist on npm
        id: check-versions
        run: |
          CORE_VERSION=$(node -p "require('./packages/core/package.json').version")
          CORE_NAME=$(node -p "require('./packages/core/package.json').name")
          
          if npm view $CORE_NAME@$CORE_VERSION version 2>/dev/null; then
            echo "Version $CORE_VERSION already published"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $CORE_VERSION not published yet"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm (dry-run)
        if: inputs.dry_run == 'true' && steps.check-versions.outputs.should_publish == 'true'
        run: |
          echo "🧪 DRY RUN MODE - Would publish:"
          cd packages/core && npm publish --dry-run
          cd ../server && npm publish --dry-run
          cd ../openapi && npm publish --dry-run
          cd ../client && npm publish --dry-run

      - name: Publish to npm
        if: inputs.dry_run != 'true' && steps.check-versions.outputs.should_publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Configure npm
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          
          # Publish packages in order
          cd packages/core
          npm publish --access public
          
          # Wait for npm registry to update
          sleep 5
          
          cd ../server
          npm publish --access public
          
          cd ../openapi  
          npm publish --access public
          
          cd ../client
          npm publish --access public

      - name: Create Git tag
        if: inputs.dry_run != 'true' && steps.check-versions.outputs.should_publish == 'true'
        run: |
          VERSION=$(node -p "require('./packages/core/package.json').version")
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore development state
        if: always()
        run: bun run restore

      - name: Publish summary
        if: steps.check-versions.outputs.should_publish == 'true'
        run: |
          VERSION=$(node -p "require('./packages/core/package.json').version")
          echo "## 📦 Published v$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Packages published to npm:" >> $GITHUB_STEP_SUMMARY
          echo "- @richie-rpc/core" >> $GITHUB_STEP_SUMMARY
          echo "- @richie-rpc/server" >> $GITHUB_STEP_SUMMARY
          echo "- @richie-rpc/openapi" >> $GITHUB_STEP_SUMMARY
          echo "- @richie-rpc/client" >> $GITHUB_STEP_SUMMARY

      - name: Skip summary
        if: steps.check-versions.outputs.should_publish != 'true'
        run: |
          echo "## ⏭️ Skipped Publishing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Version already exists on npm. No publish needed." >> $GITHUB_STEP_SUMMARY

